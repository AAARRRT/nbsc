# Translations for CEIC data base city names which do not match official
# names. Mostly these different romanizations for names in minority languages.
rename regions:
  Aletai: Altay  # Altay, Xinjiang
  Atushi: Artux shi  # Kizilsu Kirgiz, Xinjiang
  Baxiu: Basu  # Qamdu, Tibet
  Biyang:  Miyang  # Zhumadian, Henan
  Botou: Potou  # Cangzhou, Hebei
  Buerjin: Burqin  # Altay, Xinjiang
  Chancheng:  Shancheng  # Foshan, Guangdong
  Chengduo: Chenduo  # Yushu, Qinghai
  Dacheng: Daicheng  # Langfang, Hebei
  Danling: Danleng  # Meishan, Sichuan
  Donge: Donga  # Liaocheng, Shandong
  Dujun: Duyun  # South Guizhou, Guizhou
  Erdos: Ordos  # Inner Mongolia
  Fanshi: Fanzhi  # Xinzhou, SX
  Fuijian: Fujian
  Fuxin Mongolian:  Fuxin Mongolzu  # Fuxin, Liaoning
  Hetian City: Hetian shi  # Hotan, Xinjiang
  Hetian County: Hetian  # Hotan, Xinjiang
  Junlian: Yunlian  # Yibin, Sichuan
  Kashi: Kaxgar  # Xinjiang
  Kazuo:  Kalaqin zuoyi  # Chaoyang, Liaoning
  Laoting: Leting  # Tangshan, Hebei
  Lhokha: Loka  # Tibet
  Lindian:  Lindain  # Daqing, Heilongjiang
  Lingtao: Lintao  # Dingxi, Gansu
  Linxia City: Linxia shi  # Linxia, Gansu
  Linxia County: Linxia  # Linxia, Gansu
  Liuzhi:  Luzhi  # Liupanshui, Guizhou
  Lueyang: Lveyang # Hanzhong, Shaanxi (error in gb2260)
  Lvchun: Luchun  # Honghe, Yunnan
  Lvliang: Luliang  # Shanxi
  MolidawaDaur:  Molidawadawoer  # Hulunbeier, Inner Mongolia
  Muling:  Muleng  # Mudanjiang, Heilongjiang
  Nanmulin: Namling  # Xigaze, Tibet
  Narqu: Nagqu  # Tibet
  Ngri: Ngari  # Tibet
  Pizhou:  Peizhou  # Xuzhou, Jiangsu
  Sahuangjiang: Shuangjiang  # Lincang, Yunnan
  Suiling:  Suileng  # Suihua, Heilongjiang
  Tanchang: Dangchang  # Longnan, Gansu
  Wuchuang: Wuchuan  # Zunyi, Guizhou
  Xilinggol: Xilingol  # Inner Mongolia
  Zhalaite:  Zalaite  # Xingan, Inner Mongolia
  Zhashui: Zuoshui  # Shangluo, Shaanxi
  Zhongmu: Zhongmou  # Zhengzhou, Henan
  Zhongweishixiaqu: Zhongwei city area  # Zhongwei, Ningxia (error in gb2260)


# The following appear in some series names, but not in the gb2260 database
discard regions:
  Gunzhou:  # Jining, Shandong
  Guoyang:  # Bozhou, Anhui
  Jiaonan:  # Qingdao, Shandong
  Miquan:  # Changji, Xinjiang
  Muyang:  # Suqian, Jiangsu
  Nanhui:  # Shanghai
  Shifang:  # Deyang, Sichuan
  Tanghai:  # Tangshan, Hebei
  Wubu:  # Yulin, Shaanxi
  Yanshui:  # Panzhihua, Sichuan
  "Zha'nang":  # Lhokha, Tibet


dimensions:
  airport:
    - [Airport, Freight Throughput]
    - [Airport, Passenger Throughput]
    - [Airport, No of Flight Handled]
  brand:
    - [New Registration of Passenger Car, by Brand]


preprocess:
  - predicate: "'Petroleum Product' in row['name']"
    transform: "row['name'] = row['name'][1:] + row['name'][:1]"

rename variables:  # Internal name: [CEIC name fragment]
  area: [Land Area of Administrative Zone]
  area_city: [Developed Area of City Construction]
  area_floor: [Floor Area of Residential Building per Capita]
  area_floor: [Floor Area of Residential Building per Capita, Rural]
  exp_cap: [Consumption Expenditure per Capita]
  exp_cap_rural2: [Living Exp per Capita, Rural Household]
  exp_cap_rural: [Consumption Expenditure per Capita, Rural]
  f_air: [Airport, Freight Throughput]
  f_all: [Transport, Freight Traffic]
  f_hwy: [Highway, Freight Traffic]
  f_hwy_comm: [Highway, Freight Traffic, Commercial]
  f_hwy_comm_mv: [Highway, Freight Traffic, Commercial, Motor Vehicle]
  f_hwy_comm_omv: [Highway, Freight Traffic, Commercial, Other Motor Vehicle]
  f_hwy_comm_trac: [Highway, Freight Traffic, Commercial, Tractor]
  f_rail: [Railway, Freight Traffic]
  gdp: [GDP]
  gdp_cap: [GDP, per Capita]
  goods_rural_bike: [Consumer Goods per 100 Rural Household, Bicycle]
  goods_rural_mc: [Consumer Goods per 100 Rural Household, Motor Cycle]
  goods_urban_auto: [Consumer Goods per 100 Urban Household, Automobile]
  hh: [No of Household]
  hwy: [Highway, Length of Highway]
  hwy_all: [Highway, Length of Highway, Expressway & Class I to IV]
  hwy_c1: [Highway, Length of Highway, Class I]
  hwy_c2: [Highway, Length of Highway, Class II]
  hwy_c3: [Highway, Length of Highway, Class III]
  hwy_c4: [Highway, Length of Highway, Class IV]
  hwy_expwy: [Highway, Length of Highway, Expressway]
  inc_cap: [Disposable Income per Capita]
  oil_cons: [Petroleum Product, Consumption]
  oil_fcons: [Petroleum Product, Final Consumption]
  oil_fcons_res: [Petroleum Product, Final Consumption, Residential]
  oil_fcons_res_rural:
    - Petroleum Product
    - Final Consumption
    - Residential
    - Rural
  oil_fcons_res_urban:
    - Petroleum Product
    - Final Consumption
    - Residential
    - Urban
  oil_fcons_tran:
    - Petroleum Product
    - Final Consumption
    - Transport, Storage, Postal & Telecommunication Service
  p_air: [Airport, Passenger Throughput]
  p_all: [Transport, Passenger Traffic]
  p_hwy: [Highway, Passenger Traffic]
  p_hwy_comm: [Highway, Passenger Traffic, Commercial]
  p_hwy_comm_mv: [Highway, Passenger Traffic, Commercial, Motor Vehicle]
  p_hwy_pt: [Highway, Passenger Traffic, Public Transport]
  p_rail: [Railway, Passenger Traffic]
  pkm_coastal: [Coastal, Passenger Turnover]
  pkm_hwy: [Highway, Passenger Turnover]
  pkm_hwy_comm: [Highway, Passenger Turnover, Commercial]
  pkm_hwy_comm_mv: [Highway, Passenger Turnover, Commercial, Motor Vehicle]
  pkm_ocean: [Ocean, Passenger Turnover]
  pkm_river: [River, Passenger Turnover]
  pkm_ww: [Waterway, Passenger Turnover]
  pop: [Population]
  pop_census: [Population, Census]
  pop_non_ag: [Population, Non Agricultural]
  stock_comm: [No of Motor Vehicle, Commercial]
  stock_comm_pass: [No of Motor Vehicle, Commercial, Passenger]
  stock_comm_truck: [No of Motor Vehicle, Commercial, Truck]
  stock_comm_truck_gen: [No of Motor Vehicle, Commercial, Truck, General]
  stock_comm_truck_spec:
    - No of Motor Vehicle
    - Commercial
    - Truck
    - Special Purpose
  stock_mc: [No of Motorcycle]
  stock_mc_priv: [No of Motorcycle, Private Owned]
  stock_mc_priv_2w: [No of Motorcycle, Private Owned, Two Wheelers]
  stock_other: [No of Motor Vehicle, Other Type]
  stock_pass: [No of Motor Vehicle, Passenger]
  stock_pass_large: [No of Motor Vehicle, Passenger, Large]
  stock_priv: [No of Motor Vehicle, Private Owned]
  stock_priv_pass: [No of Motor Vehicle, Private Owned, Passenger]
  stock_priv_pass_large: [No of Motor Vehicle, Private Owned, Passenger, Large]
  stock_priv_truck: [No of Motor Vehicle, Private Owned, Other Type]
  stock_priv_truck: [No of Motor Vehicle, Private Owned, Truck]
  stock_rent: [No of Rental Vehicle]
  stock_trac: [No of Tractor]
  stock_trac_priv: [No of Tractor, Private Owned]
  stock_truck: [No of Motor Vehicle, Truck]
  tkm_coast: [Coastal, Freight Turnover]
  tkm_hwy_comm: [Highway, Freight Turnover, Commercial]
  tkm_hwy_comm_mv: [Highway, Freight Turnover, Commercial, Motor Vehicle]
  tkm_hwy_comm_omv: [Highway, Freight Turnover, Commercial, Other Motor Vehicle]
  tkm_hwy_comm_trac: [Highway, Freight Turnover, Commercial, Tractor]
  tkm_ocean: [Ocean, Freight Turnover]
  tkm_ww: [Waterway, Freight Turnover]
  wage_avg: [Average Wage]
  wage_avg_duty: [Average Wage, On Duty]
  wage_tl: [Total Wage]
  wage_tl_duty: [Total Wage, On Duty]


units: |
  percent = [percent]
  person = [person]
  RMB = [currency]
  unit = [unit]
  jan2004 = 100

  cub_m_mn = 1e6 * m ** 3
  ha_th = 1e3 * hectare
  meter_th = 1e3 * metre
  person_km_mn = 1e6 * person * km
  person_mn = 1e6 * person
  person_th = 1e3 * person
  sq_km = km ** 2
  sq_m = m ** 2
  sq_m_mn = 1e6 * m ** 2
  rmb = RMB
  rmb_mn = 1e6 * RMB
  rmb_bn = 1e9 * RMB
  time_mn = person_mn
  ton_km_mn = 1e6 * tonne * km
  ton_mn = 1e6 * tonne
  ton_th = 1e3 * tonne
  unit_th = 1e3 * unit
